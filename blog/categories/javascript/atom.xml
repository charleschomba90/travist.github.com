<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | Travis Tidwell]]></title>
  <link href="http://travistidwell.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://travistidwell.com/"/>
  <updated>2016-06-30T09:07:39-05:00</updated>
  <id>http://travistidwell.com/</id>
  <author>
    <name><![CDATA[Travis Tidwell]]></name>
    <email><![CDATA[travist349@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mobile Drupal with Sencha Touch]]></title>
    <link href="http://travistidwell.com/blog/2013/06/18/mobile-drupal-with-sencha-touch/"/>
    <updated>2013-06-18T14:36:00-05:00</updated>
    <id>http://travistidwell.com/blog/2013/06/18/mobile-drupal-with-sencha-touch</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://www.sencha.com/img/sencha-large.png">http://www.sencha.com/img/sencha-large.png</a>" title="Sencha Touch" > Yesterday, I gave a presentation
to the Drupal Dallas Group over a technology that I have been really interested in lately called
<a href="http://www.sencha.com/products/touch">Sencha Touch</a>.  Basically, this technology allows you to
create a mobile application using an MVC web application framework based off of ExtJS.  What is
even more exciting is when you pair this technology with the <a href="http://drupal.org">Drupal CMS</a> as a backend service
for this mobile framework.  The result is something very exciting.</p>

<!-- more -->


<h2>Presentation Slides</h2>

<ul>
<li><a href="http://travistidwell.com/presentations/drupal-sencha">http://travistidwell.com/presentations/drupal-sencha</a></li>
<li><a href="https://github.com/travist/presentations/tree/master/drupal-sencha">https://github.com/travist/presentations/tree/master/drupal-sencha</a></li>
</ul>


<iframe width="100%" height="500px" src="http://www.youtube.com/embed/6JQJSGOMFEM" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[drupal.go.js: A node.js package to automate and test Drupal using Zombie.js.]]></title>
    <link href="http://travistidwell.com/blog/2013/04/14/drupalgo/"/>
    <updated>2013-04-14T15:45:00-05:00</updated>
    <id>http://travistidwell.com/blog/2013/04/14/drupalgo</id>
    <content type="html"><![CDATA[<p>When I gave my presentation yesterday regarding <a href="blog/2013/04/13/automating-and-testing-drupal-with-zombie-dot-js">Automating and Testing Drupal with Zombie.js</a>,
I also introduced a new project that I created which makes it super simple to automate anything
within the Drupal UI using Zombie.js (which is a completely headless browser implemented in Node.js).
This project is called <a href="https://github.com/travist/drupal.go.js">drupal.go.js</a> and I am very excited about it.</p>

<!-- more -->


<p>Here are the details about this project&hellip;</p>

<h2>Introduction</h2>

<p>This node.js package provides an easy way to automate and test Drupal using the Zombie.js framework. It provides some helpers that make working with Drupal within Zombie.js easy and fun.</p>

<h2>Installation &amp; Usage</h2>

<h3>Step 1</h3>

<p>Install node.js by going to <a href="http://nodejs.org">http://nodejs.org</a></p>

<h3>Step 2</h3>

<p>On OS X install the OSX GCC installer. On Windows you&rsquo;ll need Cygwin to get access to GCC, Python, etc. Read this for detailed instructions and troubleshooting.</p>

<h3>Step 3</h3>

<p>Since this tool requires 0.8 of node.js or earlier, you will need to install the NVM. Go to <a href="https://github.com/creationix/nvm">https://github.com/creationix/nvm</a> and follow the installation section.</p>

<h3>Step 4</h3>

<p>You can now install this library using NPM.</p>

<p><div>
  <pre><code class='javascript'>nvm use 0.8
npm install drupalgo</code></pre>
</div>
</p>

<h2>Configuration</h2>

<p>The configuration for your automation and testing should be placed within a configuration file in *.json form. This file contains your configurations for your Drupal installation as well as other configurations that you would like to include in your automation and testing, such as content creation, etc.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">&amp;ldquo;host&amp;rdquo;:</span> <span class="err">&amp;ldquo;&lt;a</span> <span class="err">href=</span><span class="nt">&quot;http://drupal.local/&quot;</span><span class="err">&gt;http</span><span class="p">:</span><span class="err">//drupal.local/&lt;/a&gt;&amp;rdquo;</span><span class="p">,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;user&amp;rdquo;:</span> <span class="err">&amp;ldquo;admin&amp;rdquo;,</span>
</span><span class='line'>  <span class="err">&amp;ldquo;nodes&amp;rdquo;:</span> <span class="err">[&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;{</span>
</span><span class='line'>  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;article&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;Hello There&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;body&quot;</span><span class="p">:</span> <span class="s2">&quot;This is very cool!&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;article&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;This is another node&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;body&quot;</span><span class="p">:</span> <span class="s2">&quot;Nice!&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span>  <span class="err">]</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Example</h2>

<p>You can now include this library in your test application and then do stuff using the simple drupal.go command. Since this library uses Zombie.js for its core browser, you can pass along any Zombie.js command from it&rsquo;s Zombie.js API to the drupal.go command like so&hellip;</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">pushButton</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">#</span><span class="nx">edit</span><span class="o">-</span><span class="nx">submit</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This function returns a Promise to be used with the popular Async.js library making it very simple to build intuitive tests without falling into callback hell.</p>

<p>Here is an example of how simple it is to write some automation with this library&hellip;</p>

<p>Login, then create some nodes&hellip;.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">async</span> <span class="o">=</span>     <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">async</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">drupal</span> <span class="o">=</span>    <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">drupalgo</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Load the config.json file&amp;hellip; as seen above.</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">browser</span> <span class="o">=</span> <span class="nx">drupal</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">config</span><span class="p">.</span><span class="nx">json</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Login, then create some content&amp;hellip;</span>
</span><span class='line'><span class="nx">async</span><span class="p">.</span><span class="nx">series</span><span class="p">([</span>
</span><span class='line'>  <span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">login</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span>
</span><span class='line'>  <span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">createMultipleContent</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="nx">drupal</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">nodes</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;))</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">We</span> <span class="nx">are</span> <span class="nx">done</span><span class="o">!&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Extending</h2>

<p>This library is super easy to extend and create your own Drupal processes. You can do so by simply attaching them to the Drupal object and then they can be utilized with drupal.go like other processes. Here is an example.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">async</span> <span class="o">=</span>     <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">async</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">drupal</span> <span class="o">=</span>    <span class="nx">require</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">drupalgo</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Add a new task to edit the node.</span>
</span><span class='line'><span class="nx">drupal</span><span class="p">.</span><span class="nx">editNode</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">done</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">async</span><span class="p">.</span><span class="nx">series</span><span class="p">([</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="s1">&#39;visit&#39;</span><span class="p">,</span> <span class="s1">&#39;node/1234/edit&#39;</span><span class="p">),</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="s1">&#39;fill&#39;</span><span class="p">,</span> <span class="s1">&#39;#edit-title&#39;</span><span class="p">,</span> <span class="s1">&#39;Something else!&#39;</span><span class="p">),</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="s1">&#39;pressButton&#39;</span><span class="p">,</span> <span class="s1">&#39;#edit-submit&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">],</span> <span class="nx">done</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Load the config.json file&amp;hellip; as seen above.</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">browser</span> <span class="o">=</span> <span class="nx">drupal</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">config</span><span class="p">.</span><span class="nx">json</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Login, then create some content, then EDIT A NODE!&amp;hellip;</span>
</span><span class='line'><span class="nx">async</span><span class="p">.</span><span class="nx">series</span><span class="p">([</span>
</span><span class='line'>  <span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">login</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span>
</span><span class='line'>  <span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">createMultipleContent</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="nx">drupal</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">nodes</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)),</span>
</span><span class='line'>  <span class="nx">drupal</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">editNode</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">We</span> <span class="nx">are</span> <span class="nx">done</span><span class="o">!&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Happy Automating&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automating and Testing Drupal with Zombie.js]]></title>
    <link href="http://travistidwell.com/blog/2013/04/13/automating-and-testing-drupal-with-zombie-dot-js/"/>
    <updated>2013-04-13T14:18:00-05:00</updated>
    <id>http://travistidwell.com/blog/2013/04/13/automating-and-testing-drupal-with-zombie-dot-js</id>
    <content type="html"><![CDATA[<p>Today I gave a presentation over Automating and Testing Drupal with Zombie.js at the
<a href="http://drupaldallas.org/">Drupal Dallas Days Conference</a>. I had a blast putting this
presentation together and I think just as much fun giving it.  I also used the incredible
library <a href="http://lab.hakim.se/reveal-js/#/">Reveal.js</a> for the first time which is an
amazing way to build a presentation.  I hope you enjoy it&hellip;</p>

<!-- more -->


<h2>Presentation Video</h2>

<iframe width="100%" height="450px" src="http://www.youtube.com/embed/gd3L9i7Yb8Y" frameborder="0" allowfullscreen></iframe>


<h2>Presentation Slides</h2>

<ul>
<li><a href="http://travistidwell.com/drupal-zombie">http://travistidwell.com/drupal-zombie</a></li>
<li><a href="http://github.com/travist/drupal-zombie">http://github.com/travist/drupal-zombie</a></li>
</ul>


<iframe width="100%" height="500px" src="http://travistidwell.com/drupal-zombie" frameborder="0" allowfullscreen></iframe>


<h2>Overview</h2>

<h3>The Bite</h3>

<p>It all begins with the bite&hellip; Let&rsquo;s say you need to automate something repetitive
that you always do within the Drupal UI. Or, maybe you would like to write automated
tests for Drupal, but do not want to mess with the nasty installation and runtime of
Selenium IDE. Enter Zombie.js&hellip; a lightweight, insanely fast, headless browser for
testing and automation within a single Node.js package. No browser required.
You have just been bitten.</p>

<h3>The Infection</h3>

<p>Installation is simple. Because it is a Node.js package, installation is as simple
as installing node.js on your local computer (<a href="http://nodejs.org">http://nodejs.org</a>), and then run
<div>
  <pre><code class='bash'>npm install zombie</code></pre>
</div>

You have just been infected.</p>

<h3>Walking</h3>

<p>You realize that writing simple tests and automation tools is simple. You select
elements on the page using tools you know such as jQuery Selectors (Sizzle). The
API is easy and intuitive. You are now walking.</p>

<h3>Hunting and Feeding</h3>

<p>You now cannot get enough&hellip; You are automating every mundane taks that you do
within the UI. You now have a powerful command line application at your fingertips
and realize that you do not need to build custom Services endpoints or custom Drush
commands to do what you want. You hunger for more&hellip; welcome to the hunting phase.</p>

<h3>Believing</h3>

<p>You are now a believer. Zombie.js is amazing and will make your life easier.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A better library for JavaScript Asymmetrical RSA Encryption]]></title>
    <link href="http://travistidwell.com/blog/2013/02/15/a-better-library-for-javascript-asymmetrical-rsa-encryption/"/>
    <updated>2013-02-15T22:57:00-06:00</updated>
    <id>http://travistidwell.com/blog/2013/02/15/a-better-library-for-javascript-asymmetrical-rsa-encryption</id>
    <content type="html"><![CDATA[<p>I am a firm believer that JavaScript will eventually be the ubiquitous coding language
of the future.  Although there are many objections to this statement, I don&rsquo;t think
anyone can argue that it is the best poised for ubiquity considering it
is now used in both server side (<a href="http://nodejs.org">node.js</a>) and obviously client
side open web standards.  And considering that this language did start out as a &lsquo;toy&rsquo;
language, I am often amazing at how far it has come in maturity in recent years. There
is an area where I am most amazed at its progression, and that is with Encryption.  For
years, this area was pretty much dominated by the C and C++ languages (to which I am
also a seasoned developer in), but now that JavaScript has made its way to the server,
it is becoming recognized as a potential contender to this domination.</p>

<!-- more -->


<p>Much of this recognition should be directed toward the fantastic work of <a href="http://www-cs-students.stanford.edu/~tjw/jsbn/">Tom Wu</a>
of Standford.  It was his work with the JSBN library that really opened peoples eyes
to the effectiveness of JavaScript in the field of encryption.  However, there was just
minor drawback to his work&hellip; The only real way to utilize his library is to have a full
understanding behind the equations of encryption, which comes at as a huge hurtle considering
the industry has been spoiled with the ease of use of the OpenSSL library generation of
standardized keys used in the encryption.  In this system, there is really only two things
to worry about&hellip; The <strong>Public Key</strong> and the <strong>Private Key</strong>, used
for encryption and decryption respectively.  But in order to use <a href="http://www-cs-students.stanford.edu/~tjw/jsbn/">Tom Wu&rsquo;s</a>
library, you must learn how to utilize eight different variables to the encryption equations!
I recognized this as a perfect opportunity to create a simple wrapper library around his library that
simply speaks in terms of the <strong>Public</strong> and <strong>Private</strong> keys
everyone is familiar with.  Of course I found other libraries out there that claim to do the same, but
what I couldn&rsquo;t find in these libraries was a simple wrapper around this library that basically uses
Tom&rsquo;s library <a href="https://github.com/travist/jsencrypt/pull/6">practically</a> untouched, but simply adds a wrapper to provide parsing of actual Private and Public key-pairs
generated with OpenSSL. Enter <a href="https://github.com/travist/jsencrypt">JSEncrypt</a>.</p>

<h2>Download</h2>

<p>Go to <a href="https://github.com/travist/jsencrypt">https://github.com/travist/jsencrypt</a> to download this library.</p>

<h2>Website &amp; Demo</h2>

<p><a href="http://travistidwell.com/jsencrypt">http://travistidwell.com/jsencrypt</a></p>

<h2>How to use this library.</h2>

<p>This library should work hand-in-hand with openssl. With that said, here is how to use this library.</p>

<ul>
<li>Within your terminal (Unix based OS) type the following.</li>
</ul>


<p><div>
  <pre><code class='bash'>openssl genrsa -out rsa_1024_priv.pem 1024</code></pre>
</div>
</p>

<ul>
<li>This generates a private key, which you can see by doing the following&hellip;</li>
</ul>


<p><div>
  <pre><code class='bash'>cat rsa_1024_priv.pem</code></pre>
</div>
</p>

<ul>
<li>You can then copy and paste this in the Private Key section of within index.html.</li>
<li>Next, you can then get the public key by executing the following command.</li>
</ul>


<p><div>
  <pre><code class='bash'>openssl rsa -pubout -in rsa_1024_priv.pem -out rsa_1024_pub.pem</code></pre>
</div>
</p>

<ul>
<li>You can see the public key by typing&hellip;</li>
</ul>


<p><div>
  <pre><code class='bash'>cat rsa_1024_pub.pem</code></pre>
</div>
</p>

<ul>
<li>Now copy and paste this in the Public key within the index.html.</li>
<li>Now you can then convert to and from encrypted text by doing the following in code.</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!doctype html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>title<span class="ni">&amp;gt;</span>JavaScript RSA Encryption<span class="ni">&amp;lt;</span>/title<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script src=&quot;http://code.jquery.com/jquery-1.8.3.min.js&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script src=&quot;bin/jsencrypt.min.js&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script type=&quot;text/javascript&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>  // Call this code when the page is done loading.
</span><span class='line'>  $(function() {
</span><span class='line'>
</span><span class='line'>    // Run a quick encryption/decryption when they click.
</span><span class='line'>    $(&#39;#testme&#39;).click(function() {
</span><span class='line'>
</span><span class='line'>      // Encrypt with the public key...
</span><span class='line'>      var encrypt = new JSEncrypt();
</span><span class='line'>      encrypt.setPublicKey($(&#39;#pubkey&#39;).val());
</span><span class='line'>      var encrypted = encrypt.encrypt($(&#39;#input&#39;).val());
</span><span class='line'>
</span><span class='line'>      // Decrypt with the private key...
</span><span class='line'>      var decrypt = new JSEncrypt();
</span><span class='line'>      decrypt.setPrivateKey($(&#39;#privkey&#39;).val());
</span><span class='line'>      var uncrypted = decrypt.decrypt(encrypted);
</span><span class='line'>
</span><span class='line'>      // Now a simple check to see if the round-trip worked.
</span><span class='line'>      if (uncrypted == $(&#39;#input&#39;).val()) {
</span><span class='line'>        alert(&#39;It works!!!&#39;);
</span><span class='line'>      }
</span><span class='line'>      else {
</span><span class='line'>        alert(&#39;Something went wrong....&#39;);
</span><span class='line'>      }
</span><span class='line'>    });
</span><span class='line'>  });
</span><span class='line'><span class="ni">&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>label for=&quot;privkey&quot;<span class="ni">&amp;gt;</span>Private Key<span class="ni">&amp;lt;</span>/label<span class="ni">&amp;gt;&amp;lt;</span>br/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>textarea id=&quot;privkey&quot; rows=&quot;15&quot; cols=&quot;65&quot;<span class="ni">&amp;gt;</span>-----BEGIN RSA PRIVATE KEY-----
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>MIICXQIBAAKBgQDlOJu6TyygqxfWT7eLtGDwajtNFOb9I5XRb6khyfD1Yt3YiCgQ
</span><span class='line'>WMNW649887VGJiGr/L5i2osbl8C9+WJTeucF+S76xFxdU6jE0NQ+Z+zEdhUTooNR
</span><span class='line'>aY5nZiu5PgDB0ED/ZKBUSLKL7eibMxZtMlUDHjm4gwQco1KRMDSmXSMkDwIDAQAB
</span><span class='line'>AoGAfY9LpnuWK5Bs50UVep5c93SJdUi82u7yMx4iHFMc/Z2hfenfYEzu+57fI4fv
</span><span class='line'>xTQ//5DbzRR/XKb8ulNv6+CHyPF31xk7YOBfkGI8qjLoq06V+FyBfDSwL8KbLyeH
</span><span class='line'>m7KUZnLNQbk8yGLzB3iYKkRHlmUanQGaNMIJziWOkN+N9dECQQD0ONYRNZeuM8zd
</span><span class='line'>8XJTSdcIX4a3gy3GGCJxOzv16XHxD03GW6UNLmfPwenKu+cdrQeaqEixrCejXdAF
</span><span class='line'>z/7+BSMpAkEA8EaSOeP5Xr3ZrbiKzi6TGMwHMvC7HdJxaBJbVRfApFrE0/mPwmP5
</span><span class='line'>rN7QwjrMY+0+AbXcm8mRQyQ1+IGEembsdwJBAN6az8Rv7QnD/YBvi52POIlRSSIM
</span><span class='line'>V7SwWvSK4WSMnGb1ZBbhgdg57DXaspcwHsFV7hByQ5BvMtIduHcT14ECfcECQATe
</span><span class='line'>aTgjFnqE/lQ22Rk0eGaYO80cc643BXVGafNfd9fcvwBMnk0iGX0XRsOozVt5Azil
</span><span class='line'>psLBYuApa66NcVHJpCECQQDTjI2AQhFc1yRnCU/YgDnSpJVm1nASoRUnU8Jfm3Oz
</span><span class='line'>uku7JUXcVpt08DFSceCEX9unCuMcT72rAQlLpdZir876
</span><span class='line'><span class="ni">&amp;mdash;&amp;mdash;</span>-END RSA PRIVATE KEY<span class="ni">&amp;mdash;&amp;mdash;&amp;ndash;</span><span class="nt">&lt;/textarea&gt;&lt;br/&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>label for=&quot;pubkey&quot;<span class="ni">&amp;gt;</span>Public Key<span class="ni">&amp;lt;</span>/label<span class="ni">&amp;gt;&amp;lt;</span>br/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>textarea id=&quot;pubkey&quot; rows=&quot;15&quot; cols=&quot;65&quot;<span class="ni">&amp;gt;</span>-----BEGIN PUBLIC KEY-----
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDlOJu6TyygqxfWT7eLtGDwajtN
</span><span class='line'>FOb9I5XRb6khyfD1Yt3YiCgQWMNW649887VGJiGr/L5i2osbl8C9+WJTeucF+S76
</span><span class='line'>xFxdU6jE0NQ+Z+zEdhUTooNRaY5nZiu5PgDB0ED/ZKBUSLKL7eibMxZtMlUDHjm4
</span><span class='line'>gwQco1KRMDSmXSMkDwIDAQAB
</span><span class='line'><span class="ni">&amp;mdash;&amp;mdash;</span>-END PUBLIC KEY<span class="ni">&amp;mdash;&amp;mdash;&amp;ndash;</span><span class="nt">&lt;/textarea&gt;&lt;br/&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>label for=&quot;input&quot;<span class="ni">&amp;gt;</span>Text to encrypt:<span class="ni">&amp;lt;</span>/label<span class="ni">&amp;gt;&amp;lt;</span>br/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>textarea id=&quot;input&quot; name=&quot;input&quot; type=&quot;text&quot; rows=4 cols=70<span class="ni">&amp;gt;</span>This is a test!<span class="ni">&amp;lt;</span>/textarea<span class="ni">&amp;gt;&amp;lt;</span>br/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>input id=&quot;testme&quot; type=&quot;button&quot; value=&quot;Test Me!!!&quot; /<span class="ni">&amp;gt;&amp;lt;</span>br/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Here is a demo&hellip; <a href="http://travistidwell.com/jsencrypt/demo/index.html"><a href="http://travistidwell.com/jsencrypt/demo/index.html">http://travistidwell.com/jsencrypt/demo/index.html</a></a></p>

<iframe src="http://travistidwell.com/jsencrypt/demo/index.html" width="100%" height="1200px" frameborder="0"></iframe>


<h2>Other Information</h2>

<p>This library heavily utilizes the wonderful work of Tom Wu found at <a href="http://www-cs-students.stanford.edu/~tjw/jsbn">http://www-cs-students.stanford.edu/~tjw/jsbn</a>.</p>

<p>This jsbn library was written using the raw variables to perform encryption. This is great for encryption, but most private keys use a Private Key in the PEM format seen below.</p>

<h3>1024 bit RSA Private Key in Base64 Format</h3>

<p><div>
  <pre><code class='bash'>&amp;mdash;&amp;mdash;-BEGIN RSA PRIVATE KEY&amp;mdash;&amp;mdash;&amp;ndash;
MIICXgIBAAKBgQDHikastc8+I81zCg/qWW8dMr8mqvXQ3qbPAmu0RjxoZVI47tvs
kYlFAXOf0sPrhO2nUuooJngnHV0639iTTEYG1vckNaW2R6U5QTdQ5Rq5u+uV3pMk
7w7Vs4n3urQ6jnqt2rTXbC1DNa/PFeAZatbf7ffBBy0IGO0zc128IshYcwIDAQAB
AoGBALTNl2JxTvq4SDW/3VH0fZkQXWH1MM10oeMbB2qO5beWb11FGaOO77nGKfWc
bYgfp5Ogrql4yhBvLAXnxH8bcqqwORtFhlyV68U1y4R+8WxDNh0aevxH8hRS/1X5
031DJm1JlU0E+vStiktN0tC3ebH5hE+1OxbIHSZ+WOWLYX7JAkEA5uigRgKp8ScG
auUijvdOLZIhHWq7y5Wz+nOHUuDw8P7wOTKU34QJAoWEe771p9Pf/GTA/kr0BQnP
QvWUDxGzJwJBAN05C6krwPeryFKrKtjOGJIniIoY72wRnoNcdEEs3HDRhf48YWFo
riRbZylzzzNFy/gmzT6XJQTfktGqq+FZD9UCQGIJaGrxHJgfmpDuAhMzGsUsYtTr
iRox0D1Iqa7dhE693t5aBG010OF6MLqdZA1CXrn5SRtuVVaCSLZEL/2J5UcCQQDA
d3MXucNnN4NPuS/L9HMYJWD7lPoosaORcgyK77bSSNgk+u9WSjbH1uYIAIPSffUZ
bti+jc1dUg5wb+aeZlgJAkEAurrpmpqj5vg087ZngKfFGR5rozDiTsK5DceTV97K
a3Y+Nzl+XWTxDBWk4YPh2ZlKv402hZEfWBYxUDn5ZkH/bw==
&amp;mdash;&amp;mdash;-END RSA PRIVATE KEY&amp;mdash;&amp;mdash;&amp;ndash;</code></pre>
</div>
</p>

<p>This library simply takes keys in the following format, and translates it to those variables needed to perform the encryptions used in Tom Wu&rsquo;s library.</p>

<p>Here are some good resources to investigate further.</p>

<ul>
<li><a href="http://etherhack.co.uk/asymmetric/docs/rsa_key_breakdown.html">http://etherhack.co.uk/asymmetric/docs/rsa_key_breakdown.html</a></li>
<li><a href="http://www.di-mgt.com.au/rsa_alg.html">http://www.di-mgt.com.au/rsa_alg.html</a></li>
<li><a href="https://polarssl.org/kb/cryptography/asn1-key-structures-in-der-and-pem">https://polarssl.org/kb/cryptography/asn1-key-structures-in-der-and-pem</a></li>
</ul>


<p>With this information, we can translate a private key format to the variables required with the jsbn library from Tom Wu by using the following mappings.</p>

<p><div>
  <pre><code class='bash'>modulus =&gt; n
public exponent =&gt; e
private exponent =&gt; d
prime1 =&gt; p
prime2 =&gt; q
exponent1 =&gt; dmp1
exponent2 =&gt; dmq1
coefficient =&gt; coeff</code></pre>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rope Maze]]></title>
    <link href="http://travistidwell.com/blog/2011/04/10/rope-maze/"/>
    <updated>2011-04-10T13:58:00-05:00</updated>
    <id>http://travistidwell.com/blog/2011/04/10/rope-maze</id>
    <content type="html"><![CDATA[<p>Today I went to the <a href="http://www.sciencemuseumok.org">Science Museum of Oklahoma</a>
and was very intrigued by a rope maze puzzle they had there. This puzzle was basically
a layout of 5 different rooms with doors between each room, and connected to this puzzle
was a rope.  The challenge said to use the rope to weave through all of the open doors
and do not let the rope cross each other.  The goal was to go through all of the doors.
I approached this problem like any software engineer would and went home and wrote a
program that would solve the problem for me.  I did it in HTML, CSS, and JavaScript.</p>

<!-- more -->


<p>Below is the result of this effort.</p>

<iframe src="http://travistidwell.com/ropemaze/ropemaze.html" width="100%" height="600px" frameborder="0"></iframe>


<h2>The code</h2>

<p>The source code for this endeavor can be found at <a href="https://github.com/travist/ropemaze">https://github.com/travist/ropemaze</a>, but here
is what the javascript ended up looking like.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">maze</span> <span class="o">=</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s1">&#39;outside&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_out_nw&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_nw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_nw_n&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_n&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_ne&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_ne&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_ne_n&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_n&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_en&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_ne&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_ne_e&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_es&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_se&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_se_e&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_se&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_se&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_se_s&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_s&#39;</span> <span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_s&#39;</span> <span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_s_s&#39;</span><span class="p">},</span> <span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_s_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_sw&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_sw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_sw_s&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_ws&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_sw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_sw_w&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_w&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_out_wn&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_nw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_nw_w&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_w&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s1">&#39;room_nw&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_nw_n&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_nw&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_n&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_nw_e&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_ne&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_ne_w&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_nw_s&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_sw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_sw_n&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_nw_w&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_wn&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_w&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s1">&#39;room_ne&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_ne_n&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_ne&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_n&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_ne_e&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_en&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_ne_se&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_se&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_se_n&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_se&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_ne_sw&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_s&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_s_ne&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_sw&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_ne_w&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_nw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_nw_e&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_e&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s1">&#39;room_se&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_se_n&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_ne&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_ne_se&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_se&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_se_e&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_es&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_se_s&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_se&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_se_w&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_s&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_s_e&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_w&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s1">&#39;room_s&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_s_n&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_ne&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_ne_sw&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_ne_sw&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_s_e&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_se&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_se_w&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_se_w&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_s_s&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_s&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_s_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_s_w&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_sw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_sw_e&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_e&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s1">&#39;room_sw&#39;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;door_sw_n&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_nw&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_nw_sw&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_nw_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_sw_e&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;room_s&#39;</span><span class="p">,</span> <span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_s_w&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_e&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_sw_s&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_sw&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_s&#39;</span><span class="p">)},</span>
</span><span class='line'>  <span class="s1">&#39;door_sw_w&#39;</span><span class="o">:</span><span class="p">{</span><span class="nx">to</span><span class="o">:</span><span class="p">{</span><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span><span class="nx">door</span><span class="o">:</span><span class="s1">&#39;door_out_ws&#39;</span><span class="p">},</span><span class="nx">display</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#door_sw_w&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="kd">var</span> <span class="nx">count</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">#</span><span class="nx">count</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">tries</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">#</span><span class="nx">tries</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">crosses</span> <span class="o">=</span> <span class="p">{};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Get an indexed array of all the doors.</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">doors</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">roomName</span> <span class="k">in</span> <span class="nx">maze</span> <span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">room</span> <span class="o">=</span> <span class="nx">maze</span><span class="p">[</span><span class="nx">roomName</span><span class="p">];</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kd">var</span> <span class="nx">doorName</span> <span class="k">in</span> <span class="nx">room</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">doorName</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Build a collision map.</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span> <span class="kd">var</span> <span class="nx">roomName</span> <span class="k">in</span> <span class="nx">maze</span> <span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">num_doors</span> <span class="o">=</span> <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">num_doors</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">iDoor</span> <span class="o">=</span> <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">][</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span> <span class="nx">j</span><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">num_doors</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">jDoor</span> <span class="o">=</span> <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">][</span><span class="nx">j</span><span class="p">];</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">crosses</span><span class="p">[</span><span class="nx">iDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">jDoor</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="nx">k</span><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">j</span><span class="p">;</span> <span class="nx">k</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">kDoor</span> <span class="o">=</span> <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">][</span><span class="nx">k</span><span class="p">];</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="nx">l</span><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">num_doors</span><span class="p">;</span> <span class="nx">l</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">lDoor</span> <span class="o">=</span> <span class="nx">doors</span><span class="p">[</span><span class="nx">roomName</span><span class="p">][</span><span class="nx">l</span><span class="p">];</span>
</span><span class='line'>        <span class="nx">crosses</span><span class="p">[</span><span class="nx">iDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">jDoor</span><span class="p">][</span><span class="nx">kDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">lDoor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="kd">var</span> <span class="nx">rooms</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">fromDoor</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">toDoor</span><span class="o">:</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">room</span><span class="o">:</span><span class="s1">&#39;outside&#39;</span><span class="p">,</span>
</span><span class='line'><span class="nx">tried</span><span class="o">:</span><span class="p">{}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Checks to see if this path crosses with any prevoious path.</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">doesCross</span><span class="p">(</span> <span class="nx">fromDoor</span><span class="p">,</span> <span class="nx">toDoor</span> <span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">path1</span> <span class="o">=</span> <span class="nx">fromDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">toDoor</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">path2</span> <span class="o">=</span> <span class="nx">toDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">fromDoor</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">retVal</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="kd">var</span> <span class="nx">step</span> <span class="k">in</span> <span class="nx">rooms</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">room</span> <span class="o">=</span> <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">temp1</span> <span class="o">=</span> <span class="nx">room</span><span class="p">.</span><span class="nx">fromDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">room</span><span class="p">.</span><span class="nx">toDoor</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">temp2</span> <span class="o">=</span> <span class="nx">room</span><span class="p">.</span><span class="nx">toDoor</span> <span class="o">+</span> <span class="s2">&quot;:&quot;</span> <span class="o">+</span> <span class="nx">room</span><span class="p">.</span><span class="nx">fromDoor</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">path1</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">path1</span><span class="p">][</span><span class="nx">temp1</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">path2</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">path2</span><span class="p">][</span><span class="nx">temp1</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">path1</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">path1</span><span class="p">][</span><span class="nx">temp2</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">path2</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">path2</span><span class="p">][</span><span class="nx">temp2</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">temp1</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">temp1</span><span class="p">][</span><span class="nx">path1</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">temp2</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">temp2</span><span class="p">][</span><span class="nx">path1</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">temp1</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">temp1</span><span class="p">][</span><span class="nx">path2</span><span class="p">])</span> <span class="o">||</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">crosses</span><span class="p">[</span><span class="nx">temp2</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">crosses</span><span class="p">[</span><span class="nx">temp2</span><span class="p">][</span><span class="nx">path2</span><span class="p">])</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">retVal</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="nx">retVal</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Find a door.</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">findDoor</span><span class="p">(</span> <span class="nx">step</span> <span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">door</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">room</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span> <span class="kd">var</span> <span class="nx">toDoor</span> <span class="k">in</span> <span class="nx">maze</span><span class="p">[</span><span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">room</span><span class="p">]</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">thisDoor</span> <span class="o">=</span> <span class="nx">maze</span><span class="p">[</span><span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">room</span><span class="p">][</span><span class="nx">toDoor</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="nx">thisDoor</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span>
</span><span class='line'>        <span class="o">!</span><span class="nx">thisDoor</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;entered&quot;</span><span class="p">)</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span>
</span><span class='line'>        <span class="o">!</span><span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">tried</span><span class="p">[</span><span class="nx">toDoor</span><span class="p">]</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span>
</span><span class='line'>        <span class="o">!</span><span class="nx">doesCross</span><span class="p">(</span><span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">fromDoor</span><span class="p">,</span><span class="nx">toDoor</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">door</span> <span class="o">=</span> <span class="nx">thisDoor</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">door</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">step</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;tried&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;entered&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">toDoor</span> <span class="o">=</span> <span class="nx">toDoor</span><span class="p">;</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="nx">door</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="kd">var</span> <span class="nx">step</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">numTries</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">running</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// Step our maze forward one step.</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">stepForward</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">door</span> <span class="o">=</span> <span class="nx">findDoor</span><span class="p">(</span><span class="nx">step</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="nx">door</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Enter this door.</span>
</span><span class='line'>  <span class="nx">step</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">tried</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">door</span> <span class="o">=</span> <span class="nx">door</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">fromDoor</span> <span class="o">=</span> <span class="nx">door</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">door</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">room</span> <span class="o">=</span> <span class="nx">door</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">room</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">tries</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="o">++</span><span class="nx">numTries</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Step back and try again...</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">tried</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">door</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;entered&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;tried&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">step</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">tried</span><span class="p">[</span><span class="nx">rooms</span><span class="p">[</span><span class="nx">step</span><span class="p">].</span><span class="nx">toDoor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">#</span><span class="nx">nextstep</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">stepForward</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">#</span><span class="nx">run</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">running</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="nx">running</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">stepForward</span><span class="p">();</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">doorCount</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;div.door.entered&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">count</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">doorCount</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="nx">doorCount</span> <span class="o">!=</span> <span class="mi">15</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">setTimeout</span><span class="p">(</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nx">$</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">#</span><span class="nx">stop</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">running</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
